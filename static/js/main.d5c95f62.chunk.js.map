{"version":3,"sources":["components/Navigaton.js","config.js","firebase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigaton","userName","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","NWEETS_KEY","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","storageService","getStorage","nweetsRef","collection","AuthForm","useState","email","setEmail","password","setPassword","newAccont","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","signInWithPopup","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","onDeleteClick","window","confirm","deleteDoc","doc","id","ref","attachmentURL","attachmentRef","deleteObject","onUpdateSubmit","nweetRef","updateDoc","updatedAt","Date","now","maxLength","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","length","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","createdAt","creatorId","htmlFor","faPlus","accept","files","reader","FileReader","onload","e","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","Profile","refreshUser","defaultPhotoURL","displayName","setDisplayName","photoURL","getMyNweets","history","useHistory","onClickLogout","signOut","push","q","query","where","orderBy","getDocs","forEach","console","log","updateProfile","currentUser","height","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5c95f62.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigaton = ({ userName }) => (\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n        <li>\n            <Link\n                to=\"/profile\"\n                style={{\n                    marginLeft: 10,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    fontSize: 12,\n                }}\n            >\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                <span style={{ marginTop: 10 }}>\n                    {userName\n                        ? `${userName}의 Profile`\n                        : \"Profile\"}\n                </span>\n            </Link>\n        </li>\n    </ul>\n)\n\nexport default Navigaton;","export const NWEETS_KEY = \"nweets\";","// Import the functions you need from the SDKs you need\nimport { NWEETS_KEY } from \"config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, GoogleAuthProvider, GithubAuthProvider, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\nimport { getFirestore, collection, addDoc, getDocs, onSnapshot, deleteDoc, updateDoc, doc, query, where, orderBy } from \"firebase/firestore\";\nimport { getStorage, ref, uploadString, getDownloadURL, deleteObject } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const googleProvider = new GoogleAuthProvider();\nexport const githubProvider = new GithubAuthProvider();\nexport const storageService = getStorage();\n\nexport const nweetsRef = collection(dbService, NWEETS_KEY);\n\n// auth\nexport {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    onAuthStateChanged,\n    signInWithPopup,\n    signOut,\n    updateProfile\n}\n\n// firebase\nexport {\n    addDoc,\n    getDocs,\n    deleteDoc,\n    updateDoc,\n    onSnapshot,\n    doc,\n    query,\n    where,\n    orderBy\n}\n\nexport {\n    ref,\n    uploadString,\n    getDownloadURL,\n    deleteObject\n}","import React, { useState } from \"react\";\nimport { authService, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccont, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"email\") setEmail(value);\n        else setPassword(value);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            if (newAccont) {\n                await createUserWithEmailAndPassword(authService, email, password);\n            } else {\n                await signInWithEmailAndPassword(authService, email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n    const toggleAccount = () => { setNewAccount((prev) => !prev) }\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    required value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccont ? 'Create Account' : 'Log In'} />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccont ? 'Log In' : 'Create Account'}\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm;","/* eslint-disable import/no-anonymous-default-export */\nimport AuthForm from \"components/AuthForm\";\nimport { authService, googleProvider, githubProvider, signInWithPopup } from \"firebase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const { target: { name } } = event;\n\n        let provider;\n        if (name === \"google\") {\n            provider = googleProvider;\n        } else if (name === \"github\") {\n            provider = githubProvider;\n        }\n        await signInWithPopup(authService, provider);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n}\nexport default Auth;","import React, { useState } from \"react\";\nimport { dbService, doc, deleteDoc, updateDoc, storageService, ref, deleteObject } from \"firebase\";\nimport { NWEETS_KEY } from \"config\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const toggleEditing = () => { setEditing((prev) => !prev) }\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"정말 삭제하시겠습니까?\");\n        if (ok) {\n            await deleteDoc(doc(dbService, NWEETS_KEY, nweetObj.id));\n            const attachmentRef = await ref(storageService, nweetObj.attachmentURL);\n            await deleteObject(attachmentRef);\n        }\n    }\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNewNweet(value);\n    }\n    const onUpdateSubmit = async (event) => {\n        event.preventDefault();\n        const nweetRef = doc(dbService, NWEETS_KEY, nweetObj.id);\n        await updateDoc(nweetRef, {\n            text: newNweet,\n            updatedAt: Date.now()\n        });\n        setEditing(false);\n    }\n\n    return (\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <form onSubmit={onUpdateSubmit} className=\"container nweetEdit\">\n                        <input\n                            value={newNweet}\n                            placeholder=\"What's on your mind?\"\n                            type=\"text\"\n                            maxLength={120}\n                            required\n                            onChange={onChange}\n                            autoFocus\n                            className=\"formInput\"\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                            Cancel\n                        </span>\n                    </form>\n                ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {\n                            nweetObj.attachmentURL &&\n                            <img src={nweetObj.attachmentURL} alt={nweetObj.text} />\n                        }\n                        {isOwner && (\n                            <div className=\"nweet__actions\">\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                            </div>\n                        )}\n                    </>\n                )\n            }\n        </div >\n    )\n\n}\nexport default Nweet;","import React, { useState } from \"react\";\nimport { nweetsRef, addDoc, storageService, ref, uploadString, getDownloadURL } from \"firebase\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        if (nweet === \"\") return;\n        event.preventDefault();\n\n        let attachmentURL = \"\";\n        if (attachment.length > 0) {\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const response = await uploadString(attachmentRef, attachment, 'data_url')\n            attachmentURL = await getDownloadURL(response.ref);\n        }\n        await addDoc(nweetsRef, {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentURL\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    }\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNweet(value);\n    }\n    const onFileChange = (event) => {\n        const { target: { files } } = event;\n        const reader = new FileReader();\n        reader.onload = ((e) => {\n            const { currentTarget: { result } } = e;\n            setAttachment(result);\n        })\n        reader.readAsDataURL(files[0]);\n    }\n    const onClearAttachment = (event) => {\n        event.preventDefault();\n        setAttachment(\"\");\n    }\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {\n                attachment &&\n                (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={attachment}\n                            alt=\"preview\"\n                            style={{\n                                backgroundImage: attachment,\n                            }}\n                        />\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </div>\n                    </div>\n                )}\n        </form>\n    )\n}\n\nexport default NweetFactory;","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useEffect, useState } from \"react\";\nimport { nweetsRef, onSnapshot } from \"firebase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        onSnapshot(nweetsRef,\n            (snapshot) => {\n                const nweetArray = snapshot.docs.map(doc => (\n                    {\n                        ...doc.data(),\n                        id: doc.id\n                    }\n                ))\n                setNweets(nweetArray);\n            });\n    }, [])\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {\n                    nweets.map((nweetObj) => (\n                        <Nweet key={nweetObj.id} nweetObj={nweetObj} isOwner={nweetObj.creatorId === userObj.uid} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\nexport default Home;","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useEffect, useState } from \"react\";\nimport { authService, nweetsRef, signOut, query, where, getDocs, orderBy, updateProfile, ref, storageService, uploadString, getDownloadURL } from \"firebase\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useHistory } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const defaultPhotoURL = \"https://cdn-icons-png.flaticon.com/512/1177/1177568.png\";\n    const [displayName, setDisplayName] = useState(userObj.displayName ?? \"\");\n    const [attachment, setAttachment] = useState(userObj.photoURL);\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n\n    let history = useHistory();\n    const onClickLogout = async () => {\n        await signOut(authService);\n        history.push(\"/\");\n    }\n\n    const getMyNweets = async () => {\n        const q = query(nweetsRef, where(\"creatorId\", \"==\", userObj.uid), orderBy(\"createdAt\"))\n        const querySnapshot = await getDocs(q);\n        querySnapshot.forEach((doc) => {\n            console.log(doc.data());\n        })\n    };\n    const onDisplayNameChange = (event) => {\n        const { target: { value } } = event;\n        setDisplayName(value);\n    }\n    const onFileChange = (event) => {\n        const { target: { files } } = event;\n        const reader = new FileReader();\n        reader.onload = ((e) => {\n            const { currentTarget: { result } } = e;\n            setAttachment(result);\n        })\n        reader.readAsDataURL(files[0]);\n    }\n    const onClearPhotoClick = (event) => {\n        event.preventDefault();\n        // setAttachment(defaultPhotoURL);\n        setAttachment(null);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentURL = \"\";\n        if (attachment && attachment.length > 0) {\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const response = await uploadString(attachmentRef, attachment, 'data_url')\n            attachmentURL = await getDownloadURL(response.ref);\n        }\n        await updateProfile(authService.currentUser, {\n            displayName,\n            photoURL: attachmentURL\n        });\n        refreshUser();\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    type=\"text\"\n                    value={displayName}\n                    autoFocus\n                    onChange={onDisplayNameChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n                <div>\n                    <div className=\"profileForm__attachment\">\n                        <img\n                            src={attachment ?? defaultPhotoURL}\n                            alt=\"profileImage\"\n                            style={{\n                                backgroundImage: attachment ?? defaultPhotoURL,\n                            }}\n                        />\n                        <div className=\"profileForm__edit\">\n                            <span onClick={onClearPhotoClick}>\n                                <span>Remove</span>\n                                <FontAwesomeIcon icon={faTimes} />\n                            </span>\n                            <span>\n                                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                                    <span>Edit photo</span>\n                                    <FontAwesomeIcon icon={faPlus} />\n                                </label>\n                                <input\n                                    id=\"attach-file\"\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    onChange={onFileChange}\n                                    style={{\n                                        opacity: 0,\n                                        height: 0\n                                    }}\n                                />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onClickLogout}>\n                Log Out\n            </span>\n        </div>\n    )\n}\n\nexport default Profile;","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navigator from \"components/Navigaton\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigator userName={userObj.displayName} />}\n            <Switch>\n                <>\n                    {\n                        isLoggedIn ? (\n                            <div\n                                style={{\n                                    maxWidth: 890,\n                                    width: \"100%\",\n                                    margin: \"0 auto\",\n                                    marginTop: 80,\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                <Route exact path=\"/\">\n                                    <Home userObj={userObj} />\n                                </Route>\n                                <Route exact path=\"/profile\">\n                                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                                </Route>\n                            </div>\n                        ) : (\n                            <>\n                                <Route exact path=\"/\">\n                                    <Auth />\n                                </Route>\n                            </>\n                        )\n                    }\n                </>\n            </Switch>\n        </Router>);\n}\n\nexport default AppRouter;","import AppRouter from \"components/Router\";\nimport { authService, onAuthStateChanged } from \"firebase\";\nimport { useEffect, useState } from \"react\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoURL: user.photoURL,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    // 너무 많은 데이터를 셋팅하면 과부하가 오므로, 필요한 내용만 담아 업데이트하여 React가 즉시 렌더링 되도록한다.\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={userObj !== null} userObj={userObj} refreshUser={refreshUser} /> : \"initialize....\"}\n      <footer>&copy; {new Date().getFullYear()} mijeong</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}